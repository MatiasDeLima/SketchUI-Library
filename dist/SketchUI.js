/*! For license information please see SketchUI.js.LICENSE.txt */
!function(n,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("SketchUI",[],t):"object"==typeof exports?exports.SketchUI=t():n.SketchUI=t()}(self,(()=>(()=>{"use strict";var n={d:(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},o:(n,t)=>Object.prototype.hasOwnProperty.call(n,t),r:n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})}},t={};n.r(t),n.d(t,{Form:()=>o,Header:()=>s,default:()=>i});var e={};n.r(e),n.d(e,{Form:()=>o,Header:()=>s});class o{constructor(n){const{formInputs:t=[],formTitle:e="",formTerms:o="",formError:s="",formButton:i="",formText:r="",formLink:l=""}=n;this.formInputs=t,this.formTitle=e,this.formTerms=o,this.formError=s,this.formButton=i,this.formText=r,this.formLink=l}createForm(){const n=document.querySelector(".form"),t=this.formInputs;t.map((n=>`\n                <div class="form__input">\n                    <i class="${n.icon}"></i>\n                    <input type="${n.type}" placeholder="${n.placeholder}" class="input">\n                </div>\n            `)).join(""),n.innerHTML=`\n            <h3 class="form__title">${this.formTitle}</h3>\n\n            <div class="form__inputs">${t}</div>\n\n            <div class="form__terms">\n                <input type="checkbox" class="checkbox">\n                <p class="form_terms-text">${this.formTerms}</p>\n            </div>\n\n            <p class="form__error">${this.formError}</p>\n\n            <button class="button form__button">${this.formButton}</button>\n\n            <p class="form__text">${this.formText} <a href="" class="form__link">${this.formLink}</a></p>\n        `}}class s{constructor(n){const{logoText:t="",logoUrl:e="",links:o=[],buttons:s=[],buttonText:i=""}=n;this.logoText=t,this.logoUrl=e,this.links=o,this.buttons=s,this.buttonText=i,this.menuVisible=!1}_toggleMenu(){const n=document.getElementById("nav-menu");this.menuVisible=!this.menuVisible,n&&n.classList.toggle("show-menu",this.menuVisible)}_closeMenu(){const n=document.getElementById("nav-menu");this.menuVisible=!1,n&&n.classList.remove("show-menu")}createHeader(){const n=document.querySelector(".header"),t=this.links.map((n=>`\n                <li class="nav__item">\n                    <a href="${n.url}" class="nav__link">${n.text}</a>\n                </li>\n            `)).join(""),e=this.buttons.map((n=>`\n                <div id="${n.id}">\n                    <i class="${n.icon}"></i>                \n                </div>\n            `)).join("");n.innerHTML=`\n            <header class="header">\n                <nav class="nav container">\n                    <a href="${this.logoUrl}" class="nav__logo">${this.logoText}</a>\n\n                    <div class="nav__menu" id="nav-menu">\n                        <ul class="nav__list">\n                            ${t}\n                        </ul>\n\n                        <div class="nav__close" id="nav-close">\n                            <i class="ri-close-line"></i>\n                        </div>\n                    </div>\n\n                    <div class="nav__buttons">\n                        <button class="button nav__button">${this.buttonText}</button>\n\n                        <ul class="nav__icons">\n                            ${e}\n\n                            <div class="nav__toggle" id="nav-toggle">\n                                <i class="ri-menu-line"></i>\n                            </div>\n                        </ul>\n                    </div>\n                </nav>\n            </header>\n        `;const o=document.getElementById("nav-toggle"),s=document.getElementById("nav-close");o&&o.addEventListener("click",this._toggleMenu.bind(this)),s&&s.addEventListener("click",this._closeMenu.bind(this))}}const i=e;return t})()));